{
  "BlossomStatus": {
    "parent": []
  },
  "BlossomTransparentStatus": {
    "parent": []
  },
  "BlossomSize": {
    "parent": []
  },
  "BlossomColor": {
    "parent": []
  },
  "ColorVariants": {
    "parent": []
  },
  "TransparentColorVariants": {
    "parent": []
  },
  "ThemeColorNames": {
    "parent": []
  },
  "SemanticColorNames": {
    "parent": []
  },
  "SurfaceColorNames": {
    "parent": []
  },
  "BlossomThemeColors": {
    "parent": []
  },
  "BlossomContext": {
    "properties": [
      {
        "name": "colors",
        "dataType": "BlossomThemeColors",
        "description": null,
        "comment": ""
      },
      {
        "name": "isDark",
        "dataType": "boolean",
        "description": null,
        "comment": ""
      },
      {
        "name": "options",
        "dataType": "BlossomUIOptions",
        "description": null,
        "comment": ""
      }
    ],
    "parent": []
  },
  "Children": {
    "parent": []
  },
  "BlossomThemeProviderProps": {
    "parent": []
  },
  "TypographyValues": {
    "parent": []
  },
  "BlossomUIOptions": {
    "parent": []
  },
  "TypographyOptions": {
    "parent": []
  },
  "BaseUIProps": {
    "properties": [
      {
        "name": "status",
        "dataType": "BlossomStatus",
        "defaultValue": "primary",
        "description": null,
        "comment": ""
      },
      {
        "name": "size",
        "dataType": "BlossomSize",
        "defaultValue": "medium",
        "description": null,
        "comment": ""
      }
    ],
    "parent": []
  },
  "OmitSizeProps": {
    "parent": []
  },
  "ThemeValues": {
    "parent": []
  },
  "ComponentPropsObjectMap": {
    "parent": []
  },
  "TextProps": {
    "properties": [
      {
        "name": "typography",
        "dataType": "TypographyOptions",
        "description": null,
        "comment": "Typography option to control the size of the text"
      }
    ],
    "parent": [
      "TextProps$1",
      "OmitSizeProps"
    ]
  },
  "SizedTextProps": {
    "properties": [
      {
        "name": "mode",
        "dataType": "\"label\" | \"caption\"",
        "defaultValue": "label",
        "description": null,
        "comment": "Mode of the text label or captionCaption will be used for both a caption or error text in form control inputs"
      },
      {
        "name": "typography",
        "dataType": "TypographyOptions",
        "description": null,
        "comment": "Typography option to control the size of the text"
      },
      {
        "name": "size",
        "dataType": "BlossomSize",
        "defaultValue": "medium",
        "description": null,
        "comment": ""
      }
    ],
    "parent": [
      "TextProps",
      "BaseUIProps"
    ]
  },
  "ViewProps": {
    "properties": [
      {
        "name": "row",
        "dataType": "boolean",
        "description": null,
        "comment": "Set true for horizontal(flexDirection) view"
      }
    ],
    "parent": [
      "ViewProps$1"
    ]
  },
  "ButtonMode": {
    "parent": []
  },
  "ButtonProps": {
    "properties": [
      {
        "name": "mode",
        "dataType": "ButtonMode",
        "description": null,
        "comment": ""
      },
      {
        "name": "title",
        "dataType": "string",
        "description": null,
        "comment": "Button title text"
      },
      {
        "name": "titleStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Title text style"
      },
      {
        "name": "style",
        "dataType": "StyleProp<ViewStyle>",
        "description": null,
        "comment": "Button style to add padding/margin etc."
      },
      {
        "name": "isLoading",
        "dataType": "boolean",
        "description": null,
        "comment": "Set it to true to show the activity indicator to the left"
      },
      {
        "name": "disabled",
        "dataType": "boolean",
        "description": null,
        "comment": "Set to true to disable the button"
      },
      {
        "name": "left",
        "dataType": "ReactNode",
        "description": null,
        "comment": "Render any icon/JSX on left of the title"
      },
      {
        "name": "right",
        "dataType": "ReactNode",
        "description": null,
        "comment": "Render any icon/JSX on right of the title"
      },
      {
        "name": "loaderProps",
        "dataType": "ActivityIndicatorProps",
        "description": null,
        "comment": "Loader props"
      },
      {
        "name": "status",
        "dataType": "BlossomStatus",
        "defaultValue": "primary",
        "description": null,
        "comment": ""
      },
      {
        "name": "size",
        "dataType": "BlossomSize",
        "defaultValue": "medium",
        "description": null,
        "comment": ""
      }
    ],
    "parent": [
      "PressableProps",
      "BaseUIProps"
    ]
  },
  "PressableState": {
    "parent": []
  },
  "ActivityIndicatorProps": {
    "properties": [
      {
        "name": "visible",
        "dataType": "boolean",
        "defaultValue": "true",
        "description": null,
        "comment": "Set to false to hide it"
      },
      {
        "name": "size",
        "dataType": "number | BlossomSize",
        "defaultValue": "medium",
        "description": null,
        "comment": "Control the size using pre-defined options"
      },
      {
        "name": "label",
        "dataType": "string",
        "description": null,
        "comment": "Label text below indicator"
      },
      {
        "name": "labelStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Label text style"
      },
      {
        "name": "containerStyle",
        "dataType": "StyleProp<ViewStyle>",
        "description": null,
        "comment": "Container style wrapping both label and ActivityIndicator"
      }
    ],
    "parent": [
      "Omit<ActivityIndicatorProps$1, 'size'>",
      "Omit<BaseUIProps, 'size'>"
    ]
  },
  "TextInputMode": {
    "parent": []
  },
  "TextInputProps": {
    "properties": [
      {
        "name": "mode",
        "dataType": "\"outlined\" | \"flat\"",
        "defaultValue": "outlined",
        "description": null,
        "comment": "Control the different modes of the text input"
      },
      {
        "name": "dense",
        "dataType": "boolean",
        "description": null,
        "comment": "Have a denser background in the text input"
      },
      {
        "name": "label",
        "dataType": "string",
        "description": null,
        "comment": "Label text above the input"
      },
      {
        "name": "placeholder",
        "dataType": "string",
        "description": null,
        "comment": "Placeholder for the text input"
      },
      {
        "name": "caption",
        "dataType": "string",
        "description": null,
        "comment": "Caption text below the text input"
      },
      {
        "name": "error",
        "dataType": "string",
        "description": "Error text in error status below caption text",
        "comment": "TODO: TextInput will always render this and take the space to fix the flicker issue in show/hide error"
      },
      {
        "name": "labelStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Label text style"
      },
      {
        "name": "placeholderStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Placeholder text style"
      },
      {
        "name": "captionStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Caption text style"
      },
      {
        "name": "errorStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Error text style"
      },
      {
        "name": "containerStyle",
        "dataType": "StyleProp<ViewStyle>",
        "description": null,
        "comment": "Container view style"
      },
      {
        "name": "inputStyle",
        "dataType": "StyleProp<ViewStyle>",
        "description": null,
        "comment": "Input box style"
      },
      {
        "name": "textStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Input text style equivalent to react-native style for TextInput"
      },
      {
        "name": "disabled",
        "dataType": "boolean",
        "description": null,
        "comment": "Set to true to disable the button"
      },
      {
        "name": "left",
        "dataType": "ReactNode",
        "description": null,
        "comment": "Render Icon/JSX on the left of the button"
      },
      {
        "name": "right",
        "dataType": "ReactNode",
        "description": null,
        "comment": "Render Icon/JSX on the right of the button"
      },
      {
        "name": "status",
        "dataType": "BlossomStatus",
        "defaultValue": "primary",
        "description": null,
        "comment": ""
      },
      {
        "name": "size",
        "dataType": "BlossomSize",
        "defaultValue": "medium",
        "description": null,
        "comment": ""
      }
    ],
    "parent": [
      "Omit<TextInputProps$1, 'style'>",
      "BaseUIProps"
    ]
  },
  "SearchInputProps": {
    "properties": [
      {
        "name": "withClearIcon",
        "dataType": "boolean",
        "description": null,
        "comment": ""
      },
      {
        "name": "onQueryChange",
        "dataType": "(query: string) => void",
        "description": null,
        "comment": ""
      },
      {
        "name": "debounceDelay",
        "dataType": "number",
        "description": null,
        "comment": ""
      },
      {
        "name": "mode",
        "dataType": "\"outlined\" | \"flat\"",
        "defaultValue": "outlined",
        "description": null,
        "comment": "Control the different modes of the text input"
      },
      {
        "name": "dense",
        "dataType": "boolean",
        "description": null,
        "comment": "Have a denser background in the text input"
      },
      {
        "name": "label",
        "dataType": "string",
        "description": null,
        "comment": "Label text above the input"
      },
      {
        "name": "placeholder",
        "dataType": "string",
        "description": null,
        "comment": "Placeholder for the text input"
      },
      {
        "name": "caption",
        "dataType": "string",
        "description": null,
        "comment": "Caption text below the text input"
      },
      {
        "name": "error",
        "dataType": "string",
        "description": "Error text in error status below caption text",
        "comment": "TODO: TextInput will always render this and take the space to fix the flicker issue in show/hide error"
      },
      {
        "name": "labelStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Label text style"
      },
      {
        "name": "placeholderStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Placeholder text style"
      },
      {
        "name": "captionStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Caption text style"
      },
      {
        "name": "errorStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Error text style"
      },
      {
        "name": "containerStyle",
        "dataType": "StyleProp<ViewStyle>",
        "description": null,
        "comment": "Container view style"
      },
      {
        "name": "inputStyle",
        "dataType": "StyleProp<ViewStyle>",
        "description": null,
        "comment": "Input box style"
      },
      {
        "name": "textStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Input text style equivalent to react-native style for TextInput"
      },
      {
        "name": "disabled",
        "dataType": "boolean",
        "description": null,
        "comment": "Set to true to disable the button"
      },
      {
        "name": "left",
        "dataType": "ReactNode",
        "description": null,
        "comment": "Render Icon/JSX on the left of the button"
      },
      {
        "name": "right",
        "dataType": "ReactNode",
        "description": null,
        "comment": "Render Icon/JSX on the right of the button"
      },
      {
        "name": "status",
        "dataType": "BlossomStatus",
        "defaultValue": "primary",
        "description": null,
        "comment": ""
      },
      {
        "name": "size",
        "dataType": "BlossomSize",
        "defaultValue": "medium",
        "description": null,
        "comment": ""
      }
    ],
    "parent": [
      "TextInputProps"
    ]
  },
  "DividerProps": {
    "properties": [
      {
        "name": "width",
        "dataType": "DimensionValue",
        "defaultValue": "100%",
        "description": null,
        "comment": "Control Width of the divider"
      },
      {
        "name": "height",
        "dataType": "DimensionValue",
        "defaultValue": "0.6",
        "description": null,
        "comment": "Control height of the divider"
      },
      {
        "name": "color",
        "dataType": "string",
        "defaultValue": "background900",
        "description": null,
        "comment": "Color of the divider"
      },
      {
        "name": "row",
        "dataType": "boolean",
        "description": null,
        "comment": "Set true for horizontal(flexDirection) view"
      }
    ],
    "parent": [
      "ViewProps"
    ]
  },
  "AvatarProps": {
    "properties": [
      {
        "name": "size",
        "dataType": "number | BlossomSize",
        "description": null,
        "comment": "Size of the AvatarIt can be either number or string ('small' | 'medium' | 'large')"
      },
      {
        "name": "mode",
        "dataType": "\"circle\" | \"round\" | \"square\"",
        "description": null,
        "comment": "Control the shape of the Avatar"
      },
      {
        "name": "url",
        "dataType": "string",
        "description": null,
        "comment": "Shorthand for the Source.uri of the image propsHere You can directly pass the url of the image\nIf not provided, it will fallback to showing initials or an icon."
      },
      {
        "name": "initials",
        "dataType": "string",
        "description": null,
        "comment": "Show initials inside the AvatarIf not provided, it will fallback to showing an icon."
      },
      {
        "name": "initialStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Initials Text style to control the font size etc."
      },
      {
        "name": "icon",
        "dataType": "(size: number) => ReactNode",
        "description": null,
        "comment": "Set a custom icon for Avatar"
      },
      {
        "name": "onPress",
        "dataType": "() => void",
        "description": null,
        "comment": "On press callback"
      }
    ],
    "parent": [
      "Partial<ImageProps>",
      "OmitSizeProps"
    ]
  },
  "IconFamily": {
    "parent": []
  },
  "IconProps": {
    "properties": [
      {
        "name": "family",
        "dataType": "IconFamily",
        "defaultValue": "Ionicons",
        "description": null,
        "comment": "Vector icons family from vector-icons set"
      },
      {
        "name": "size",
        "dataType": "number",
        "defaultValue": "12",
        "description": null,
        "comment": "Size of the icon, can also be passed as fontSize in the style object."
      },
      {
        "name": "name",
        "dataType": "string",
        "description": null,
        "comment": "Name of the icon to show"
      },
      {
        "name": "color",
        "dataType": "number | ColorValue",
        "description": null,
        "comment": "Set custom icon color"
      }
    ],
    "parent": [
      "TextProps$1",
      "OmitSizeProps"
    ]
  },
  "BaseBooleanFieldProps": {
    "properties": [
      {
        "name": "position",
        "dataType": "\"left\" | \"right\"",
        "defaultValue": "right",
        "description": null,
        "comment": "Control the position of the field"
      },
      {
        "name": "adjacent",
        "dataType": "boolean",
        "defaultValue": "true",
        "description": null,
        "comment": "Set it to false to position them apart i.e. space-between"
      },
      {
        "name": "disabled",
        "dataType": "boolean",
        "description": null,
        "comment": "Set to true for disabled field"
      },
      {
        "name": "color",
        "dataType": "string",
        "description": null,
        "comment": "Set custom color"
      },
      {
        "name": "label",
        "dataType": "string",
        "description": null,
        "comment": "Label text above the input"
      },
      {
        "name": "caption",
        "dataType": "string",
        "description": null,
        "comment": "Caption text below the text input"
      },
      {
        "name": "error",
        "dataType": "string",
        "description": null,
        "comment": "Error text in error `status` below caption text"
      },
      {
        "name": "containerStyle",
        "dataType": "StyleProp<ViewStyle>",
        "description": null,
        "comment": "Container view style"
      },
      {
        "name": "labelStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Label text style"
      },
      {
        "name": "captionStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Caption text style"
      },
      {
        "name": "errorStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Error text style"
      },
      {
        "name": "status",
        "dataType": "BlossomStatus",
        "defaultValue": "primary",
        "description": null,
        "comment": ""
      },
      {
        "name": "size",
        "dataType": "BlossomSize",
        "defaultValue": "medium",
        "description": null,
        "comment": ""
      },
      {
        "name": "children",
        "dataType": "ReactNode",
        "description": null,
        "comment": "Children"
      }
    ],
    "parent": [
      "BaseUIProps",
      "Children"
    ]
  },
  "SwitchProps": {
    "properties": [
      {
        "name": "position",
        "dataType": "\"left\" | \"right\"",
        "defaultValue": "right",
        "description": null,
        "comment": "Control the position of the field"
      },
      {
        "name": "adjacent",
        "dataType": "boolean",
        "defaultValue": "true",
        "description": null,
        "comment": "Set it to false to position them apart i.e. space-between"
      },
      {
        "name": "color",
        "dataType": "string",
        "description": null,
        "comment": "Set custom color"
      },
      {
        "name": "label",
        "dataType": "string",
        "description": null,
        "comment": "Label text above the input"
      },
      {
        "name": "caption",
        "dataType": "string",
        "description": null,
        "comment": "Caption text below the text input"
      },
      {
        "name": "error",
        "dataType": "string",
        "description": null,
        "comment": "Error text in error `status` below caption text"
      },
      {
        "name": "containerStyle",
        "dataType": "StyleProp<ViewStyle>",
        "description": null,
        "comment": "Container view style"
      },
      {
        "name": "labelStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Label text style"
      },
      {
        "name": "captionStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Caption text style"
      },
      {
        "name": "errorStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Error text style"
      },
      {
        "name": "status",
        "dataType": "BlossomStatus",
        "defaultValue": "primary",
        "description": null,
        "comment": ""
      },
      {
        "name": "size",
        "dataType": "BlossomSize",
        "defaultValue": "medium",
        "description": null,
        "comment": ""
      }
    ],
    "parent": [
      "SwitchProps$1",
      "BaseBooleanFieldProps"
    ]
  },
  "RadioProps": {
    "properties": [
      {
        "name": "position",
        "dataType": "\"left\" | \"right\"",
        "defaultValue": "right",
        "description": null,
        "comment": "Control the position of the field"
      },
      {
        "name": "adjacent",
        "dataType": "boolean",
        "defaultValue": "true",
        "description": null,
        "comment": "Set it to false to position them apart i.e. space-between"
      },
      {
        "name": "color",
        "dataType": "string",
        "description": null,
        "comment": "Set custom color"
      },
      {
        "name": "label",
        "dataType": "string",
        "description": null,
        "comment": "Label text above the input"
      },
      {
        "name": "caption",
        "dataType": "string",
        "description": null,
        "comment": "Caption text below the text input"
      },
      {
        "name": "error",
        "dataType": "string",
        "description": null,
        "comment": "Error text in error `status` below caption text"
      },
      {
        "name": "containerStyle",
        "dataType": "StyleProp<ViewStyle>",
        "description": null,
        "comment": "Container view style"
      },
      {
        "name": "labelStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Label text style"
      },
      {
        "name": "captionStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Caption text style"
      },
      {
        "name": "errorStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Error text style"
      },
      {
        "name": "status",
        "dataType": "BlossomStatus",
        "defaultValue": "primary",
        "description": null,
        "comment": ""
      },
      {
        "name": "size",
        "dataType": "BlossomSize",
        "defaultValue": "medium",
        "description": null,
        "comment": ""
      }
    ],
    "parent": [
      "SwitchProps$1",
      "BaseBooleanFieldProps"
    ]
  },
  "CheckboxProps": {
    "properties": [
      {
        "name": "value",
        "dataType": "boolean",
        "description": null,
        "comment": "Control the state of the checkbox with value"
      },
      {
        "name": "indeterminate",
        "dataType": "boolean",
        "description": null,
        "comment": "Set to true for an intermediate state"
      },
      {
        "name": "onValueChange",
        "dataType": "(value: boolean) => void | Promise<void>",
        "description": null,
        "comment": "Callback for on value change"
      },
      {
        "name": "style",
        "dataType": "StyleProp<ViewStyle>",
        "description": null,
        "comment": "Style of the checkbox"
      },
      {
        "name": "position",
        "dataType": "\"left\" | \"right\"",
        "defaultValue": "right",
        "description": null,
        "comment": "Control the position of the field"
      },
      {
        "name": "adjacent",
        "dataType": "boolean",
        "defaultValue": "true",
        "description": null,
        "comment": "Set it to false to position them apart i.e. space-between"
      },
      {
        "name": "disabled",
        "dataType": "boolean",
        "description": null,
        "comment": "Set to true for disabled field"
      },
      {
        "name": "color",
        "dataType": "string",
        "description": null,
        "comment": "Set custom color"
      },
      {
        "name": "label",
        "dataType": "string",
        "description": null,
        "comment": "Label text above the input"
      },
      {
        "name": "caption",
        "dataType": "string",
        "description": null,
        "comment": "Caption text below the text input"
      },
      {
        "name": "error",
        "dataType": "string",
        "description": null,
        "comment": "Error text in error `status` below caption text"
      },
      {
        "name": "containerStyle",
        "dataType": "StyleProp<ViewStyle>",
        "description": null,
        "comment": "Container view style"
      },
      {
        "name": "labelStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Label text style"
      },
      {
        "name": "captionStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Caption text style"
      },
      {
        "name": "errorStyle",
        "dataType": "StyleProp<TextStyle>",
        "description": null,
        "comment": "Error text style"
      },
      {
        "name": "status",
        "dataType": "BlossomStatus",
        "defaultValue": "primary",
        "description": null,
        "comment": ""
      },
      {
        "name": "size",
        "dataType": "BlossomSize",
        "defaultValue": "medium",
        "description": null,
        "comment": ""
      },
      {
        "name": "children",
        "dataType": "ReactNode",
        "description": null,
        "comment": "Children"
      }
    ],
    "parent": [
      "BaseBooleanFieldProps"
    ]
  },
  "ComponentPropsMap": {
    "parent": []
  }
}
